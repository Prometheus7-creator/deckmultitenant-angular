.dialog-card {
  max-height: 800px; /* Adjust the value as needed */
  overflow-y: auto; /* Add a scrollbar if content exceeds the max height */
}

.tenant-detail-card {
  .mat-card-content {
    max-height: 60vh;  // Adjust the value as needed
    overflow-y: auto;
  }
}

.tenant-detail-card {
  position: relative;
}

.top-right-actions {
  position: absolute;
  top: 0;
  right: 0;
  margin: 1rem;
}

/* Optional: Add some styling to the close button */
.top-right-actions mat-icon {
  background-color: transparent;
  color: #000;
  cursor: pointer; 
}

.edit-link {
  cursor: pointer;
  color: #29abe2;
  margin-top: 30px;
  margin-right: 40px;
}

.edit-icon {
  text-align: center;
  margin-top: 10px;
  margin-right: 40px;
}


.tenant-detail-card {
  max-width: 1000px;
  margin: 10px auto;
  padding: 10px 20px;

  h2 {
    font-size: 20px;
    margin-bottom: 20px;
    color: #333; /* Dark text color */
  }

  mat-card {
    background-color: #f5f5f5; /* Light background color */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);

    mat-card-content {
      padding: 20px;

      p {
        margin: 0 0 15px;
        font-size: 15px;
        color: #555; /* Medium-dark text color */

        strong {
          font-weight: bold;
          color: #333; /* Dark text color */
        }
      }

      ul {
        list-style-type: none;
        padding: 0;

        li {
          margin-bottom: 8px;
          font-size: 14px;
          color: #666; /* Medium text color */
        }
      }
    }

    mat-card-actions {
      display: flex;
      justify-content: flex-end;
      padding: 10px;
      }
    }
  }


.table-wrapper {
  max-height: 300px; /* Set the maximum height you prefer */
  overflow-y: auto;
  overflow-x: hidden;
  &::-webkit-scrollbar {
    display: none;
  }
}

table {
  width: 100%; /* Make the table fill the container */
  border-collapse: collapse;
}

.user-table {
  width: 100%;
  border-collapse: collapse;
}

.user-table th,
.user-table td {
  text-align: center;
  padding: 8px; /* Adjust the padding as needed */
}

.user-table th {
  background-color: #f2f2f2; /* Add a background color to the table header if desired */
}

.user-table td button {
  display: flex;
  justify-content: center;
}

.password-td
{
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.icons-list
{
  display: flex;
  justify-content: space-around;
}

.icon-list-img 
{
  height: 150px;
  width: 150px;
}

.icon-list-txt
{
  align-items: center;
  display: flex;
  justify-content: center;
}

.footer-logo-button {
  border: none; 
  margin-right: 10px;
  border-radius: 4px; 
  padding: 6px 10px; 
  background-color: transparent; 
  cursor: pointer;
  transition: background-color 0.3s ease; 
}

.footer-logo-button:hover {
  background-color: #f0f0f0; 
}

.footer-logo-button:active {
  background-color: #e0e0e0; 
}

.footer-logo-button:focus {
  outline: none; 
}

.footer-logo-container {
  display: flex; /* Use flexbox layout */
  align-items: center; /* Center items vertically */
}

.can-toggle
{
  margin-left: 1rem;
}

@mixin can-toggle-branding(
  $can-toggle-off-color: #ea0030, 
  $can-toggle-on-color: #5fc054,
  $can-toggle-inactive-text: rgba(white, 0.5),
  $can-toggle-transition: cubic-bezier(0,1,0.5,1)
) {
  
  input[type="checkbox"] {
    
    &[disabled] ~ label {
      color: rgba($can-toggle-off-color, 0.5);
    }
    
    &:focus ~ label, &:hover ~ label {
      .can-toggle__switch {
        background-color: $can-toggle-off-color;
        &:after { color: darken($can-toggle-off-color, 10%); }
      }
    }
    &:hover ~label { color: darken($can-toggle-off-color, 5%); }
    &:checked {
      ~ label {
        &:hover { color: darken($can-toggle-on-color, 3%); }
        
        .can-toggle__switch {
          background-color: lighten($can-toggle-on-color, 5%);
          &:after { color: darken($can-toggle-on-color, 5%); }
        }
      }
      
      &:focus, &:hover {
        ~ label {
          .can-toggle__switch {
            background-color: $can-toggle-on-color;
            &:after { color: darken($can-toggle-on-color, 10%); }
          }
        } 
      }
    }
  }
  
  label {
    
    .can-toggle__label-text { flex: 1; }
    
    .can-toggle__switch {
      transition: background-color 0.3s $can-toggle-transition;
      background: lighten($can-toggle-off-color, 5%);
      &:before { color: $can-toggle-inactive-text; }
      &:after {
        // Autoprefixer choked here, so making the prefixes explicit
        -webkit-transition: -webkit-transform 0.3s $can-toggle-transition;
        transition: transform 0.3s $can-toggle-transition;
        color: $can-toggle-off-color; 
      }
    }
    
  }
}

@mixin can-toggle-appearance 
( 
  $can-toggle-width: 134px,
  $can-toggle-height: 25px,
  $can-toggle-border-radius: 15px,
  $can-toggle-offset: 2px,
  $can-toggle-label-font-size: 14px,
  $can-toggle-switch-font-size: 12px,
  $can-toggle-shadow: 0 3px 3px rgba(black, 0.4)
){
  $can-toggle-switch-width: $can-toggle-width/2;
  
  input[type="checkbox"] {

    &:focus ~ label, &:hover ~ label {
      .can-toggle__switch {
        &:after { box-shadow: $can-toggle-shadow; } 
      }
    }
    
    &:checked {
      ~ label {
        .can-toggle__switch {
          &:after { transform: translate3d($can-toggle-width - ($can-toggle-switch-width + $can-toggle-offset),0,0); }  
        }
      }
      &:focus, &:hover {
        ~ label {
          .can-toggle__switch { &:after { box-shadow: $can-toggle-shadow; } }
        } 
      }
    }
  }
  
  label {
    font-size: $can-toggle-label-font-size;
    
    .can-toggle__switch {
      height: $can-toggle-height;
      flex: 0 0 $can-toggle-width;
      border-radius: $can-toggle-border-radius;
      
      &:before {
        left: $can-toggle-width/2;
        font-size: $can-toggle-switch-font-size; 
        line-height: $can-toggle-height;
        width: $can-toggle-width/2;
        padding: 0 12px;
      }
      
      &:after {
        top: $can-toggle-offset; left: $can-toggle-offset;
        border-radius: $can-toggle-border-radius+2;
        width: $can-toggle-switch-width - $can-toggle-offset; 
        line-height: $can-toggle-height - ($can-toggle-offset*2);
        font-size: $can-toggle-switch-font-size;
      }
      
      &:hover {
        &:after { box-shadow: $can-toggle-shadow; }
      }
    } 
  }
}



.can-toggle {
  position: relative;
  *, *:before, *:after { box-sizing: border-box; }
  //overflow: hidden;
  
  input[type="checkbox"] {
    opacity: 0;
    position: absolute;
    top: 0; left: 0;
    
    &[disabled] ~ label {
      pointer-events: none;
      .can-toggle__switch { opacity: 0.4; }
    }
    
    &:checked {
      ~ label {
        
        .can-toggle__switch {
          
          &:before {
            content: attr(data-unchecked);
            left: 0;
          }
        
          &:after {
            content: attr(data-checked);
          }  
        }
      }
      
      // &:focus, &:hover {
      //   // ~ label {
      //   // } 
      // }
    }
  }
  
  label {
    user-select: none;
    position: relative;
    display: flex;
    align-items: center;
    z-index: 1;
    
    .can-toggle__label-text { 
      flex: 1;
      padding-left: 32px;
    }
    
    .can-toggle__switch {
      position: relative;
      
      &:before {
        content: attr(data-checked);
        position: absolute;
        top: 0;
        text-transform: uppercase;
        text-align: center;
      }
      
      &:after {
        content: attr(data-unchecked);
        position: absolute;
        z-index: 4;
        text-transform: uppercase;
        text-align: center;
        background: white;
        transform: translate3d(0,0,0);
        // border-radius: 18px;
      }

    }
    
  }
  
  // Default values for .can-toggle class
  @include can-toggle-branding; 
  @include can-toggle-appearance; 
  
  // Create toggles of different sizes by overriding the can-toggle-appearance mixin defaults
  &.can-toggle--size-small {
    @include can-toggle-appearance
    (
      90px, // Toggle width
      28px,  // Toggle height
      2px,   // Toggle border radius
      1px,   // Offset (distance btw switch and box)
      13px,  // Label font size
      10px,  // Switch font size
      0 2px 2px rgba(black, 0.4) // Switch shadow on hover/focus
    ); 
  }
}

